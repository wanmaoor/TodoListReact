{"version":3,"sources":["../../../../react-demo/todo/src/components/TodoItem.jsx","../../../../react-demo/todo/src/components/Todos.jsx","../../../../react-demo/todo/src/components/layout/Header.jsx","../../../../react-demo/todo/src/components/AddTodo.jsx","../../../../react-demo/todo/src/components/pages/About.jsx","../../../../react-demo/todo/src/App.js","../../../../react-demo/todo/src/serviceWorker.js","../../../../react-demo/todo/src/index.js"],"names":["TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","color","border","borderRadius","cursor","float","Todos","_this2","todos","map","components_TodoItem","Header","headerStyle","Link","linkStyle","to","textAlign","AddTodo","state","e","setState","target","onSubmit","preventDefault","addTodo","action","display","name","placeholder","flex","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","get","_this3","BrowserRouter","Route","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0PAGaA,SAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,SAAW,WACT,MAAO,CACLC,WAAY,SACZC,QAAS,OACTC,aAAc,kBACdC,eAAgBnB,EAAKoB,MAAMC,KAAKC,UAAY,eAAiB,SANnEtB,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAAJ,EAAAC,GAAAG,OAAAuB,EAAA,EAAAvB,CAAAJ,EAAA,EAAA4B,IAAA,SAAAC,MAAA,WAUW,IAAAC,EACexB,KAAKiB,MAAMC,KAAzBO,EADDD,EACCC,GAAIC,EADLF,EACKE,MACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO9B,KAAKY,YACfe,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SACEE,KAAK,WACLC,SAAUhC,KAAKiB,MAAMgB,aAAaC,KAAKlC,KAAMyB,KAC5C,IACFC,EACDC,EAAAC,EAAAC,cAAA,UAAQC,MAAOK,EAAUC,QAASpC,KAAKiB,MAAMoB,QAAQH,KAAKlC,KAAMyB,IAAhE,WApBV/B,EAAA,CAA8B4C,cA2BxBH,EAAW,CACftB,WAAY,UACZ0B,MAAO,OACPC,OAAQ,OACR1B,QAAS,WACT2B,aAAc,MACdC,OAAQ,UACRC,MAAO,SASMjD,ICxBAkD,6MAjBbX,aAAe,qFAIN,IAAAY,EAAA7C,KACP,OAAOA,KAAKiB,MAAM6B,MAAMC,IAAI,SAAA7B,GAC1B,OAAOS,EAAAC,EAAAC,cAACmB,EAAD,CAAU1B,IAAKJ,EAAKO,GAAIP,KAAMA,EAAMe,aAAcY,EAAK5B,MAAMgB,aAAcI,QAASQ,EAAK5B,MAAMoB,mBAPxFC,qBCFL,SAASW,IACtB,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,MAAOoB,GACbvB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMrB,MAAOsB,EAAWC,GAAG,KAA3B,QAFF,MAE+C1B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAME,GAAG,SAASvB,MAAOsB,GAAzB,WAMrD,IAAMA,EAAY,CAChBb,MAAO,QAGHW,EAAc,CAClBrC,WAAY,OACZ0B,MAAO,OACPe,UAAW,SACXxC,QAAS,QC0BIyC,EA5Cf,SAAA5D,GAAA,SAAA4D,IAAA,IAAA3D,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,GAAA,QAAAtD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAyD,IAAA9C,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEoD,MAAQ,CACN9B,MAAO,IAFX7B,EAIEmC,SAAW,SAACyB,GACV5D,EAAK6D,SAAS,CAAChC,MAAO+B,EAAEE,OAAOpC,SALnC1B,EAQE+D,SAAW,SAACH,GACVA,EAAEI,iBACFhE,EAAKoB,MAAM6C,QAAQjE,EAAK2D,MAAM9B,OAC9B7B,EAAK6D,SAAS,CAAChC,MAAO,MAX1B7B,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAAyD,EAAA5D,GAAAG,OAAAuB,EAAA,EAAAvB,CAAAyD,EAAA,EAAAjC,IAAA,SAAAC,MAAA,WAeI,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACEkC,OAAO,GACPjC,MAAO,CAACkC,QAAS,QACjBJ,SAAU5D,KAAK4D,UAEfjC,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLkC,KAAK,QACLC,YAAY,eACZpC,MAAO,CAACqC,KAAM,KAAMrD,QAAS,OAC7BS,MAAOvB,KAAKwD,MAAM9B,MAClBM,SAAUhC,KAAKgC,WAEjBL,EAAAC,EAAAC,cAAA,SACEE,KAAK,SACLR,MAAM,SACN6C,UAAU,MACVtC,MAAO,CAACqC,KAAM,aAlC1BZ,EAAA,CAA6BjB,aCDd,SAAS+B,IACtB,OACE1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KACE3C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sGC2ES0C,6MAtEbf,MAAQ,CACNV,MAAO,MASTb,aAAe,SAAAR,GACb5B,EAAK6D,SAAS,CACZZ,MAAOjD,EAAK2D,MAAMV,MAAMC,IAAI,SAAA7B,GAI1B,OAHIA,EAAKO,KAAOA,IACdP,EAAKC,WAAaD,EAAKC,WAElBD,SAKbmB,QAAU,SAAAZ,GACR+C,IAAMC,OAAN,6CAAA9D,OAA0Dc,IACvDiD,KAAK,SAAAC,GAAG,OAAI9E,EAAK6D,SAAS,CACzBZ,MAAMhD,OAAA8E,EAAA,EAAA9E,CAAKD,EAAK2D,MAAMV,MAAM+B,OAAO,SAAA3D,GAAI,OAAIA,EAAKO,KAAOA,YAK7DqC,QAAU,SAAApC,GACR8C,IACGM,KAAK,6CAA8C,CAClDpD,MAAOA,EACPP,WAAW,IAEZuD,KAAK,SAAAC,GAAG,OACP9E,EAAK6D,SAAS,CACZZ,MAAK,GAAAnC,OAAAb,OAAA8E,EAAA,EAAA9E,CAAMD,EAAK2D,MAAMV,OAAjB,CAAwB6B,EAAII,+FAjCrB,IAAAlC,EAAA7C,KAClBwE,IACGQ,IAAI,wDACJN,KAAK,SAAAC,GAAG,OAAI9B,EAAKa,SAAS,CAAEZ,MAAO6B,EAAII,0CAmCnC,IAAAE,EAAAjF,KACP,OACE2B,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,OACbzC,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,aACbzC,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAArE,GAAK,OACXU,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,SAAP,KACE3C,EAAAC,EAAAC,cAAC0D,EAAD,CAASzB,QAASmB,EAAKnB,UACvBnC,EAAAC,EAAAC,cAAC2D,EAAD,CACE1C,MAAOmC,EAAKzB,MAAMV,MAClBb,aAAcgD,EAAKhD,aACnBI,QAAS4C,EAAK5C,cAKtBV,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOE,KAAK,SAASI,UAAWpB,cA/D1B/B,aCEEoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAST,OAAO3D,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC","file":"static/js/main.5f916676.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: \"f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px #ccc dotted\",\r\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { id, title } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={this.props.markComplete.bind(this, id)}\r\n          />{\" \"}\r\n          {title}\r\n          <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}>X</button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst btnStyle = {\r\n  background: '#ff0000',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '5px 10px',\r\n  borderRadius: '50%',\r\n  cursor: 'pointer',\r\n  float: 'right'\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Todos extends Component {\r\n  markComplete = () => {\r\n    \r\n  }\r\n  \r\n  render() {\r\n    return this.props.todos.map(todo => {\r\n      return <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>;\r\n    });\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <header style={headerStyle}>\r\n        <h1>TodoList</h1>\r\n        <Link style={linkStyle} to=\"/\">Home</Link> | <Link to=\"/about\" style={linkStyle}>About</Link>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst linkStyle = {\r\n  color: '#fff'\r\n}\r\n\r\nconst headerStyle = {\r\n  background: '#333',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n  padding: '10px'\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: ''\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({title: e.target.value})\r\n  }\r\n  \r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.addTodo(this.state.title)\r\n    this.setState({title: ''})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form \r\n          action=\"\" \r\n          style={{display: 'flex'}}\r\n          onSubmit={this.onSubmit}\r\n        >\r\n          <input \r\n            type=\"text\" \r\n            name=\"title\" \r\n            placeholder=\"Add Todo ...\" \r\n            style={{flex: '10', padding: '5px'}}\r\n            value={this.state.title}\r\n            onChange={this.onChange} \r\n          />\r\n          <input \r\n            type=\"submit\" \r\n            value=\"Submit\" \r\n            className=\"btn\" \r\n            style={{flex: '1'}} \r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n};\r\nexport default AddTodo;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>this is the todolist app v1.0.0. it is part of a react crash course</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos${id}`)\n      .then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      }))\n    \n  };\n\n  addTodo = title => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title: title,\n        completed: false\n      })\n      .then(res =>\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        })\n      );\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}